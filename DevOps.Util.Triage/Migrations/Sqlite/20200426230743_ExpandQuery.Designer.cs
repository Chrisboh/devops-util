// <auto-generated />
using System;
using DevOps.Util.Triage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevOps.Util.Triage.Migrations.Sqlite
{
    [DbContext(typeof(TriageContext))]
    [Migration("20200426230743_ExpandQuery")]
    partial class ExpandQuery
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("DevOps.Util.Triage.ModelBuild", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("BuildNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("GitHubOrganization")
                        .HasColumnType("TEXT");

                    b.Property<string>("GitHubRepository")
                        .HasColumnType("TEXT");

                    b.Property<int>("ModelBuildDefinitionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PullRequestNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.HasIndex("ModelBuildDefinitionId");

                    b.ToTable("ModelBuilds");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelBuildDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AzureOrganization")
                        .HasColumnType("TEXT");

                    b.Property<string>("AzureProject")
                        .HasColumnType("TEXT");

                    b.Property<int>("DefinitionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefinitionName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AzureOrganization", "AzureProject", "DefinitionId")
                        .IsUnique();

                    b.ToTable("ModelBuildDefinitions");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTimelineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuildNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Line")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelBuildId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ModelTimelineQueryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TimelineRecordName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModelBuildId");

                    b.HasIndex("ModelTimelineQueryId");

                    b.ToTable("ModelTimelineItems");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTimelineQuery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GitHubOrganization")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GitHubRepository")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IssueNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SearchText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GitHubOrganization", "GitHubRepository", "IssueNumber")
                        .IsUnique();

                    b.ToTable("ModelTimelineQueries");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTimelineQueryComplete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModelBuildId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ModelTimelineQueryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModelBuildId");

                    b.HasIndex("ModelTimelineQueryId", "ModelBuildId")
                        .IsUnique();

                    b.ToTable("ModelTimelineQueryCompletes");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTriageGitHubIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IssueNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModelTriageIssueId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Organization")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Repository")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModelTriageIssueId");

                    b.HasIndex("Organization", "Repository", "IssueNumber")
                        .IsUnique();

                    b.ToTable("ModelTriageGitHubIssues");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTriageIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SearchKind")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SearchText")
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("TriageIssueKind")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("SearchKind", "SearchText")
                        .IsUnique();

                    b.ToTable("ModelTriageIssues");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTriageIssueResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuildNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Line")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelBuildId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ModelTriageIssueId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TimelineRecordName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModelBuildId");

                    b.HasIndex("ModelTriageIssueId");

                    b.ToTable("ModelTriageIssueResults");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTriageIssueResultComplete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModelBuildId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ModelTriageIssueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModelBuildId");

                    b.HasIndex("ModelTriageIssueId", "ModelBuildId")
                        .IsUnique();

                    b.ToTable("ModelTriageIssueResultCompletes");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelBuild", b =>
                {
                    b.HasOne("DevOps.Util.Triage.ModelBuildDefinition", "ModelBuildDefinition")
                        .WithMany()
                        .HasForeignKey("ModelBuildDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTimelineItem", b =>
                {
                    b.HasOne("DevOps.Util.Triage.ModelBuild", "ModelBuild")
                        .WithMany()
                        .HasForeignKey("ModelBuildId");

                    b.HasOne("DevOps.Util.Triage.ModelTimelineQuery", "ModelTimelineQuery")
                        .WithMany("ModelTimelineItems")
                        .HasForeignKey("ModelTimelineQueryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTimelineQueryComplete", b =>
                {
                    b.HasOne("DevOps.Util.Triage.ModelBuild", "ModelBuild")
                        .WithMany()
                        .HasForeignKey("ModelBuildId");

                    b.HasOne("DevOps.Util.Triage.ModelTimelineQuery", "ModelTimelineQuery")
                        .WithMany("ModelTimelineQueryCompletes")
                        .HasForeignKey("ModelTimelineQueryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTriageGitHubIssue", b =>
                {
                    b.HasOne("DevOps.Util.Triage.ModelTriageIssue", null)
                        .WithMany("ModelTriageGitHubissues")
                        .HasForeignKey("ModelTriageIssueId");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTriageIssueResult", b =>
                {
                    b.HasOne("DevOps.Util.Triage.ModelBuild", "ModelBuild")
                        .WithMany()
                        .HasForeignKey("ModelBuildId");

                    b.HasOne("DevOps.Util.Triage.ModelTriageIssue", "ModelTriageIssue")
                        .WithMany()
                        .HasForeignKey("ModelTriageIssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTriageIssueResultComplete", b =>
                {
                    b.HasOne("DevOps.Util.Triage.ModelBuild", "ModelBuild")
                        .WithMany()
                        .HasForeignKey("ModelBuildId");

                    b.HasOne("DevOps.Util.Triage.ModelTriageIssue", "ModelTriageIssue")
                        .WithMany()
                        .HasForeignKey("ModelTriageIssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
