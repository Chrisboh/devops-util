// <auto-generated />
using System;
using DevOps.Util.Triage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevOps.Util.Triage.Migrations
{
    [DbContext(typeof(TriageDbContext))]
    partial class TriageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("DevOps.Util.Triage.ModelBuild", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("BuildNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("GitHubOrganization")
                        .HasColumnType("TEXT");

                    b.Property<string>("GitHubRepository")
                        .HasColumnType("TEXT");

                    b.Property<int>("ModelBuildDefinitionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PullRequestNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModelBuildDefinitionId");

                    b.ToTable("ModelBuilds");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelBuildDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AzureOrganization")
                        .HasColumnType("TEXT");

                    b.Property<string>("AzureProject")
                        .HasColumnType("TEXT");

                    b.Property<int>("DefinitionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefinitionName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AzureOrganization", "AzureProject", "DefinitionId")
                        .IsUnique();

                    b.ToTable("ModelBuildDefinitions");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTimelineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuildNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Line")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelBuildId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ModelTimelineQueryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TimelineRecordName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModelBuildId");

                    b.HasIndex("ModelTimelineQueryId");

                    b.ToTable("ModelTimelineItems");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTimelineQuery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GitHubOrganization")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GitHubRepository")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IssueNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SearchText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GitHubOrganization", "GitHubRepository", "IssueNumber")
                        .IsUnique();

                    b.ToTable("ModelTimelineQueries");
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelBuild", b =>
                {
                    b.HasOne("DevOps.Util.Triage.ModelBuildDefinition", "ModelBuildDefinition")
                        .WithMany()
                        .HasForeignKey("ModelBuildDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DevOps.Util.Triage.ModelTimelineItem", b =>
                {
                    b.HasOne("DevOps.Util.Triage.ModelBuild", "ModelBuild")
                        .WithMany()
                        .HasForeignKey("ModelBuildId");

                    b.HasOne("DevOps.Util.Triage.ModelTimelineQuery", "ModelTimelineQuery")
                        .WithMany("ModelTimelineItems")
                        .HasForeignKey("ModelTimelineQueryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
